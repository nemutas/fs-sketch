---
import PageLink from '../components/PageLink.astro'
import Layout from '../layouts/Layout.astro'

const pages2024 = (await Astro.glob('./2024/*.astro')).map((glob) => glob.url?.split('/').at(-1)).reverse()
---

<Layout title="FS Sketch">
  <main>
    <div class="border">FS Sketch</div>
    <div class="border">2024</div>
    {pages2024.map((page) => page && <PageLink y="2024" md={page} />)}
  </main>
</Layout>

<style lang="scss" is:global>
  @use '../styles/mixins/media.scss' as *;

  main {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(var(--columns), 1fr);

    & > * {
      position: relative;
      z-index: 0;
      aspect-ratio: 1;
      font-size: min(2.4rem, 14px);
      display: grid;
      place-items: center;
      min-width: calc(100vw / var(--columns));
      min-height: calc(100vw / var(--columns));
      overflow: hidden;
      padding: 3rem;
      word-break: break-all;

      &.border {
        border: 1px solid #fff1;
      }

      &.empty {
        &::before,
        &::after {
          content: '';
          position: absolute;
          width: calc(100% * sqrt(2));
          height: 1px;
          background: #fff2;
          rotate: 45deg;
        }
        &::after {
          rotate: -45deg;
        }
      }
    }
  }
</style>

<script>
  import '../scripts/scroller'
  import { env } from '../scripts/env'

  env.mobileMql.addEventListener('change', () => {
    location.reload()
  })

  const column = env.isPc ? 7 : 3
  const container = document.querySelector<HTMLElement>('main')!
  const tiles = document.querySelectorAll<HTMLElement>('main > *')
  let emptyTileCount = column - (tiles.length % column)
  if (emptyTileCount === column) emptyTileCount = 0

  for (let i = 0; i < emptyTileCount; i++) {
    const emptyTile = document.createElement('div')
    emptyTile.classList.add('border', 'empty')
    container.appendChild(emptyTile)
  }
</script>
